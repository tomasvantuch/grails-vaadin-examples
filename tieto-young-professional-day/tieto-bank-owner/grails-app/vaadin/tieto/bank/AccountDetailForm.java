package tieto.bank;

import tieto.bank.admin.Account;
import tieto.bank.admin.AccountType;
import tieto.bank.state.EmptyState;
import tieto.bank.state.StateHolder;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

public class AccountDetailForm extends CustomComponent {

	@AutoGenerated
	public GridLayout mainLayout;
	@AutoGenerated
	public Button btn_save;
	@AutoGenerated
	public Button btr_remove;
	@AutoGenerated
	public TextField txtAccountBalance;
	@AutoGenerated
	public Label lblAccountBalance;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	StateHolder holder;
	public Account account;
	
	public AccountDetailForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		this.holder = new StateHolder(this, StateHolder.EMPTY_STATE);
		//init components from account
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setColumns(2);
		mainLayout.setRows(2);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// lblAccountBalance
		lblAccountBalance = new Label();
		lblAccountBalance.setImmediate(false);
		lblAccountBalance.setWidth("141px");
		lblAccountBalance.setHeight("-1px");
		lblAccountBalance.setValue("Account balance");
		mainLayout.addComponent(lblAccountBalance, 0, 0);
		mainLayout.setComponentAlignment(lblAccountBalance, new Alignment(48));
		
		// txtAccountBalance
		txtAccountBalance = new TextField();
		txtAccountBalance.setImmediate(false);
		txtAccountBalance.setWidth("235px");
		txtAccountBalance.setHeight("-1px");
		txtAccountBalance.setSecret(false);
		mainLayout.addComponent(txtAccountBalance, 1, 0);
		mainLayout.setComponentAlignment(txtAccountBalance, new Alignment(48));
		
		// btr_remove
		btr_remove = new Button();
		btr_remove.setCaption("remove");
		btr_remove.setImmediate(false);
		btr_remove.setWidth("-1px");
		btr_remove.setHeight("-1px");
		mainLayout.addComponent(btr_remove, 0, 1);
		mainLayout.setComponentAlignment(btr_remove, new Alignment(48));
		
		// btn_save
		btn_save = new Button();
		btn_save.setCaption("save");
		btn_save.setImmediate(false);
		btn_save.setWidth("-1px");
		btn_save.setHeight("-1px");
		mainLayout.addComponent(btn_save, 1, 1);
		mainLayout.setComponentAlignment(btn_save, new Alignment(48));
		
		return mainLayout;
	}
	
	public void setAccountDetail(Account account){
		if(account!= null){
			this.account = account; 
			if(AccountType.Corporate.equals(account.getType())){
				this.holder.setState(StateHolder.CORPORATE_STATE);
			}else{
				if(AccountType.Private.equals(account.getType())){
					this.holder.setState(StateHolder.PRIVATE_STATE);
				}else{
					//TODO log
				}
			}
		}else{
			//TODO log
		}
		
	}

}
